{"version":3,"sources":["store/actionTypes.js","store/commentsActions.js","components/Loader.js","components/Comments.js","components/AddComment.js","store/commentsReducer.js","App.js","index.js"],"names":["GET_COMMENTS_PENDING","GET_COMMENTS_FULLFILLED","ADD_COMMENT_PENDING","ADD_COMMENT_FULLFILLED","HIDE_LOADER","URL","Loader","className","src","Comments","dispatch","useDispatch","useSelector","store","comments","data","isLoading","useEffect","a","type","TYPES","fetch","res","json","payload","map","comment","name","id","initialState","AddComment","useState","state","setState","placeholder","value","onChange","e","target","onClick","formData","method","body","JSON","stringify","headers","rootReducer","combineReducers","action","TYPE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAaA,EAAuB,uBACvBC,EAA0B,0BAC1BC,EAAsB,sBACtBC,EAAyB,yBACzBC,EAAc,cCHrBC,EAAM,sD,cCSGC,EARA,WACb,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAKA,UAAU,cAAcC,IAAI,wBC2BxBC,EA3BE,WACf,IAAMC,EAAWC,cADI,EAEOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAA/CC,EAFa,EAEbA,KAAMC,EAFO,EAEPA,UAMd,OAJAC,qBAAU,WACRP,EFNF,uCAAO,WAAMA,GAAN,iBAAAQ,EAAA,sEAEHR,EAAS,CACPS,KAAMC,IAHL,SAKeC,MAAMhB,GALrB,cAKGiB,EALH,gBAMgBA,EAAIC,OANpB,OAMGA,EANH,OAQHb,EAAS,CACPS,KAAMC,EACNI,QAASD,IAVR,uBAaHb,EAAS,CACPS,KAAMC,IAdL,yEAAP,yDEOG,CAACV,IAGF,qCAEIM,EACI,cAAC,EAAD,IACA,KAGFD,EAAKU,KAAI,SAAAC,GAAO,OAChB,0BAASnB,UAAU,UAAnB,UACE,qBAAIA,UAAU,gBAAd,UAA+BmB,EAAQC,KAAvC,OACA,mBAAGpB,UAAU,gBAAb,SAA8BmB,EAAQA,YAFNA,EAAQE,W,eClB9CC,EAAe,CACnBF,KAAM,GACND,QAAS,IAqCII,EAlCI,WAAO,IAAD,EACGC,mBAAS,eAAKF,IADjB,mBAChBG,EADgB,KACTC,EADS,KAGjBvB,EAAWC,cAMjB,OACE,sBAAKJ,UAAU,aAAf,UACE,oBAAIA,UAAU,oBAAd,iIACA,0BACEA,UAAU,mBACV2B,YAAY,wEACZC,MAAOH,EAAMN,QACbU,SAAU,SAAAC,GAAC,OAAIJ,EAAS,2BAAKD,GAAN,IAAaN,QAASW,EAAEC,OAAOH,YAExD,uBACE5B,UAAU,mBACV2B,YAAY,qBACZC,MAAOH,EAAML,KACbS,SAAU,SAAAC,GAAC,OAAIJ,EAAS,2BAAKD,GAAN,IAAaL,KAAMU,EAAEC,OAAOH,YAErD,wBACE5B,UAAU,kBACVgC,QAtBe,WHWG,IAACC,EGVvB9B,GHUuB8B,EGVHR,EHWtB,uCAAO,WAAMtB,GAAN,iBAAAQ,EAAA,sEAEHR,EAAS,CACPS,KAAMC,IAHL,SAKeC,MAAMhB,EAAK,CAC3BoC,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBATjB,cAKGvB,EALH,gBAYgBA,EAAIC,OAZpB,OAYGA,EAZH,OAaHb,EAAS,CACPS,KAAMC,EACNI,QAASD,IAfR,uBAmBHb,EAAS,CACPS,KAAMC,IApBL,yEAAP,wDGVEa,EAAS,eAAKJ,KAkBZ,wE,eC/BAA,EAAe,CACnBd,KAAM,GACNC,WAAW,G,QCMP8B,EAAcC,YAAgB,CAClCjC,SDJ6B,WAAmC,IAAlCkB,EAAiC,uDAAzBH,EAAcmB,EAAW,uCAC/D,OAAQA,EAAO7B,MACb,KAAK8B,EACL,KAAKA,EACH,OAAO,2BACFjB,GADL,IAEEhB,WAAW,IAEf,KAAKiC,EACH,OAAO,2BACFjB,GADL,IAEEjB,KAAMiC,EAAOxB,UAEjB,KAAKyB,EACH,OAAO,2BACFjB,GADL,IAEEjB,KAAK,GAAD,mBAAMiB,EAAMjB,MAAZ,CAAkBiC,EAAOxB,YAEjC,KAAKyB,EACH,OAAO,2BACFjB,GADL,IAEEhB,WAAW,IAEf,QACE,OAAOgB,MCjBPkB,EAAmBC,OAAOC,sCAAwCC,IAClExC,EAAQyC,YACZR,EACAI,EACEK,YACEC,OAcSC,EATH,WACV,OACE,eAAC,IAAD,CAAU5C,MAAOA,EAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCvBN6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.72c47b9b.chunk.js","sourcesContent":["export const GET_COMMENTS_PENDING = 'GET_COMMENTS_PENDING';\nexport const GET_COMMENTS_FULLFILLED = 'GET_COMMENTS_FULLFILLED';\nexport const ADD_COMMENT_PENDING = 'ADD_COMMENT_PENDING';\nexport const ADD_COMMENT_FULLFILLED = 'ADD_COMMENT_FULLFILLED';\nexport const HIDE_LOADER = 'HIDE_LOADER';\n","import * as TYPES from './actionTypes';\nconst URL = 'https://obscure-castle-00401.herokuapp.com/comments';\n\nexport const getComments = () => {\n  return async(dispatch) => {\n    try {\n      dispatch({\n        type: TYPES.GET_COMMENTS_PENDING,\n      });\n      const res = await fetch(URL);\n      const json = await res.json();\n\n      dispatch({\n        type: TYPES.GET_COMMENTS_FULLFILLED,\n        payload: json\n      });\n    } finally {\n      dispatch({\n        type: TYPES.HIDE_LOADER,\n      });\n    }\n  };\n};\n\nexport const addComment = (formData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: TYPES.ADD_COMMENT_PENDING,\n      });\n      const res = await fetch(URL, {\n        method: 'POST',\n        body: JSON.stringify(formData),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const json = await res.json();\n      dispatch({\n        type: TYPES.ADD_COMMENT_FULLFILLED,\n        payload: json,\n      });\n\n    } finally {\n      dispatch({\n        type: TYPES.HIDE_LOADER,\n      });\n    }\n  };\n};\n","import React from 'react';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <img className=\"loader__img\" src=\"./img/loader.png\"/>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { getComments } from '../store/commentsActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Loader from './Loader';\n\nconst Comments = () => {\n  const dispatch = useDispatch();\n  const { data, isLoading } = useSelector(store => store.comments);\n\n  useEffect(() => {\n    dispatch(getComments());\n  }, [dispatch]);\n\n  return (\n    <>\n      {\n        isLoading\n          ? <Loader />\n          : null\n        }\n        {\n          data.map(comment => (\n          <article className=\"comment\" key={comment.id}>\n            <h3 className=\"comment__name\">{comment.name}:</h3>\n            <p className=\"comment__text\">{comment.comment}</p>\n          </article>\n        ))\n        }\n    </>\n  );\n};\n\nexport default Comments;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addComment } from '../store/commentsActions';\n\nconst initialState = {\n  name: '',\n  comment: '',\n};\n\nconst AddComment = () => {\n  const [state, setState] = useState({ ...initialState });\n\n  const dispatch = useDispatch();\n  const clickHandler = () => {\n    dispatch(addComment(state));\n    setState({ ...initialState });\n  };\n\n  return (\n    <div className=\"addcomment\">\n      <h2 className=\"addcomment__title\">Добавить комментарий</h2>\n      <textarea\n        className=\"addcomment__text\"\n        placeholder=\"комментарий...\"\n        value={state.comment}\n        onChange={e => setState({ ...state, comment: e.target.value })}\n      />\n      <input\n        className=\"addcomment__name\"\n        placeholder=\"имя\"\n        value={state.name}\n        onChange={e => setState({ ...state, name: e.target.value })}\n      />\n      <button\n        className=\"addcomment__btn\"\n        onClick={clickHandler}\n      >\n        Отправить\n      </button>\n    </div>\n  );\n};\n\nexport default AddComment;\n","import * as TYPE from './actionTypes';\n\nconst initialState = {\n  data: [],\n  isLoading: false,\n};\n\nexport const commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TYPE.ADD_COMMENT_PENDING:\n    case TYPE.GET_COMMENTS_PENDING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case TYPE.GET_COMMENTS_FULLFILLED:\n      return {\n        ...state,\n        data: action.payload,\n      };\n    case TYPE.ADD_COMMENT_FULLFILLED:\n      return {\n        ...state,\n        data: [...state.data, action.payload],\n      };\n    case TYPE.HIDE_LOADER:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport Comments from './components/Comments';\nimport AddComment from './components/AddComment';\n\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { commentsReducer } from './store/commentsReducer';\n\nimport thunk from 'redux-thunk';\n\nconst rootReducer = combineReducers({\n  comments: commentsReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      thunk,\n    ),\n  ),\n);\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Comments />\n      <AddComment />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}